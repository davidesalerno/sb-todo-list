version: '3.8'
services:
  postgres:
    container_name: container-pg
    image: postgres
    hostname: localhost
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: passwd
      POSTGRES_DB: todo_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

  mongodb:
    container_name: container-mongo
    image: mongodb/mongodb-community-server:6.0-ubi8
    environment:
        MONGO_INITDB_ROOT_USERNAME: admin
        MONGO_INITDB_ROOT_PASSWORD: passwd
        MONGO_INITDB_DATABASE: todo_db
    ports:
        - "27017:27017"
    volumes:
        - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
        - mongo-data:/data/db
  redpanda:
    container_name: container-kafka
    image: docker.redpanda.com/redpandadata/redpanda:v23.2.21
    command:
      - redpanda start
      - --smp 1
      - --overprovisioned
      - --kafka-addr internal://0.0.0.0:9092,external://0.0.0.0:19092
      # Address the broker advertises to clients that connect to the Kafka API.
      # Use the internal addresses to connect to the Redpanda brokers
      # from inside the same Docker network.
      # Use the external addresses to connect to the Redpanda brokers
      # from outside the Docker network.
      - --advertise-kafka-addr internal://redpanda:9092,external://localhost:19092
      - --pandaproxy-addr internal://0.0.0.0:8082,external://0.0.0.0:18082
      # Address the broker advertises to clients that connect to the HTTP Proxy.
      - --advertise-pandaproxy-addr internal://redpanda:8082,external://localhost:18082
      - --schema-registry-addr internal://0.0.0.0:8081,external://0.0.0.0:18081
      # Redpanda brokers use the RPC API to communicate with each other internally.
      - --rpc-addr redpanda:33145
      - --advertise-rpc-addr redpanda:33145
      - --mode dev-container
    ports:
      - 18081:18081
      - 18082:18082
      - 19092:19092
      - 19644:9644
    volumes:
      - redpanda-data:/var/lib/redpanda/data
    healthcheck:
      test: [ "CMD-SHELL", "rpk cluster health | grep -E 'Healthy:.+true' || exit 1" ]
      interval: 15s
      timeout: 3s
      retries: 5
      start_period: 5s

volumes:
  postgres-data:
  mongo-data:
  redpanda-data: null